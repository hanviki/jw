---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${PROJECT_NAME}
  namespace: ${PROJECT_NAMESPACE}
  labels:
    app: ${PROJECT_NAME}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ${PROJECT_NAME}
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: ${PROJECT_NAME}
    spec:
      imagePullSecrets:
        - name: ${PROJECT_REGISTRY_ACCESS}
      containers:
        - name: ${PROJECT_NAME}
          image: ${PROJECT_IMAGE}
          resources:
            requests:
              cpu: ${PROJECT_RESOURCES_REQUESTS_CPU}
              memory: ${PROJECT_RESOURCES_REQUESTS_MEMORY}
            limits:
              cpu: ${PROJECT_RESOURCES_LIMITS_CPU}
              memory: ${PROJECT_RESOURCES_LIMITS_MEMORY}
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              path: ${PROJECT_HEALTH_PATH}
              port: ${PROJECT_PORT}
              scheme: HTTP
            initialDelaySeconds: ${PROJECT_HEALTH_DELAY}
            periodSeconds: ${PROJECT_HEALTH_PERIOD}
            failureThreshold: ${PROJECT_HEALTH_FAILURE}
            successThreshold: ${PROJECT_HEALTH_SUCCESS}
            timeoutSeconds: ${PROJECT_HEALTH_TIMEOUT}
          readinessProbe:
            httpGet:
              path: ${PROJECT_HEALTH_PATH}
              port: ${PROJECT_PORT}
              scheme: HTTP
            initialDelaySeconds: ${PROJECT_HEALTH_DELAY}
            periodSeconds: ${PROJECT_HEALTH_PERIOD}
            failureThreshold: ${PROJECT_HEALTH_FAILURE}
            successThreshold: ${PROJECT_HEALTH_SUCCESS}
            timeoutSeconds: ${PROJECT_HEALTH_TIMEOUT}
          env:
            - name: "KUBERNETES_NAMESPACE"
              valueFrom:
                fieldRef:
                  fieldPath: "metadata.namespace"
            - name: SERVER_API
              value: ${ENV_SERVER_API}
#          volumeMounts:
#            - name: ${PROJECT_NAME}-logs
#              mountPath: /var/log/nginx/
#              readOnly: false
#      volumes:
#        - name: ${PROJECT_NAME}-logs
#          persistentVolumeClaim:
#            claimName: ${PROJECT_NAME}-logs
#        - name: ${PROJECT_NAME}
#          configMap:
#            claimName: ${PROJECT_NAME}
